{"version":3,"sources":["restaurant_info.js"],"names":["modalToggle","modal","document","getElementById","classList","toggle","restaurant","newMap","addEventListener","event","initMap","fetchRestaurantFromURL","error","console","self","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","getParameterByName","fetchRestaurantById","fillRestaurantHTML","arguments","length","undefined","name","innerHTML","restHeader","getElementsByClassName","isFavorite","toString","favorite","createElement","style","background","setAttribute","concat","onclick","handleFavClick","appendChild","address","image","img","imageUrlForRestaurant","imgArr","split","img1","img2","img3","className","src","srcset","sizes","alt","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fetchReviewByRestaurantId","reviews","fillReviewsHTML","fillReviewModal","favStatus","fav","log","updateRestaurantIDB","result","rating","rates","forEach","rate","option","value","innerText","append","close","window","target","submit","comment","saveReview","location","href","operatingHours","hours","key","row","day","time","container","reviewHeader","title","addReviewLink","noReviews","ul","review","createReviewHTML","li","date","Date","createdAt","toDateString","comments","breadcrumb","url","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\nvar newMap;\n\n/**\n * Initialize map as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', (event) => {  \n  initMap();\n});\n\n/**\n * Initialize leaflet map\n */\nconst initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {      \n      self.newMap = L.map('map', {\n        center: [restaurant.latlng.lat, restaurant.latlng.lng],\n        zoom: 16,\n        scrollWheelZoom: false\n      });\n      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n        mapboxToken: 'pk.eyJ1IjoidGhlZ3JlYXRkZWJhdGUiLCJhIjoiY2pqeHhjY2V4YWh4ZDNxbGZtMXAxdndmdSJ9.buoZhVfjmQ4MLiAk0B4vaA',\n        maxZoom: 18,\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n          '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n          'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        id: 'mapbox.streets'    \n      }).addTo(newMap);\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.newMap);\n    }\n  });\n}  \n \n/* window.initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      self.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n    }\n  });\n} */\n\n/**\n * Get current restaurant from page URL.\n */\nconst fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    const error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nconst fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const restHeader = document.getElementsByClassName('rest-header')[0];\n  const isFavorite = (restaurant[\"is_favorite\"] && restaurant[\"is_favorite\"].toString() === \"true\") ? true : false;\n  const favorite = document.createElement('button');\n  favorite.style.background = isFavorite ? `url(\"/img/like.svg\") no-repeat`\n    : `url(\"/img/not-like.svg\") no-repeat`;\n    if(isFavorite){\n      favorite.setAttribute('aria-label', `${restaurant.name} favorite`);\n    }else{\n      favorite.setAttribute('aria-label', `${restaurant.name} not favorite`);\n    }\n  favorite.id = `fav-icon-${restaurant.id}`;\n  favorite.onclick = event => handleFavClick(restaurant.id, !isFavorite);\n  restHeader.appendChild(favorite);  \n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  const image = document.getElementById('restaurant-img');\n  var img = DBHelper.imageUrlForRestaurant(restaurant);\n  var imgArr = img.split('.')\n  var img1 = imgArr[0] + '-400_1x.' + imgArr[1];\n  var img2 = imgArr[0] + '-800_2x.' + imgArr[1];\n  var img3 = imgArr[0] + '-1600.' + imgArr[1];\n  image.className = 'restaurant-img';\n  image.src = img1;\n  image.srcset = `${img3} 1600w, ${img2} 800w, ${img1} 400w`;\n  image.sizes = '(max-width: 400px) 400px, (max-width: 800px) 800px, (max-width: 1200px) 1600px';\n  image.alt = restaurant.name;\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  DBHelper.fetchReviewByRestaurantId(restaurant.id, (error, reviews) => {\n    fillReviewsHTML(error, reviews);\n  })\n  \n  // create review modal\n  fillReviewModal();\n  \n}\n\nconst handleFavClick = (id, favStatus) => {\n  const fav = document.getElementById(`fav-icon-${id}`);\n  console.log(`onclick info: ${self.restaurant[id]}`);\n  let restaurant = self.restaurant;\n  restaurant[\"is_favorite\"] = favStatus;\n  if(!favStatus) {\n    fav.setAttribute('aria-label',`${restaurant.name} not favorite`);\n    fav.style.background = `url(/img/not-like.svg) no-repeat`;\n  } else {\n    fav.setAttribute('aria-label', `${restaurant.name} favorite`);\n    fav.style.background = `url(/img/like.svg) no-repeat`;\n  }\n  DBHelper.updateRestaurantIDB(restaurant, (error, result) => {\n    if(error){\n      console.log(`Error updating favorite status for ${restaurant.name}: ${error}`);\n    }\n    console.log(result)\n  });\n  fav.onclick = event => handleFavClick(id, !favStatus);\n}\n/**\n * Function to toggle display of modal window\n */\nfunction modalToggle(){\n  const modal = document.getElementById('modal');\n    modal.classList.toggle('show-modal');\n}\n/**\n * Create Modal to submit new review\n */\nconst fillReviewModal = () => {\n\n  const rating = document.getElementById('rvw-rate');\n  //loop through and create ratings\n  const rates = [1,2,3,4,5];\n  rates.forEach(rate =>{\n    const option = document.createElement('option');\n    option.value = rate;\n    option.innerText = rate.toString();\n    rating.append(option);\n  });\n\n  const close = document.getElementsByClassName('close-btn')[0];\n  close.addEventListener(\"click\", modalToggle);\n\n  window.addEventListener(\"click\", function(event){\n    if(event.target.id == \"modal\"){\n      modalToggle();\n    }\n  })\n\n  const submit = document.getElementsByClassName('submit-btn')[0];\n  submit.addEventListener('click',function(){\n    const name = document.getElementsByClassName('rvw-reviewer')[0].value;\n    const rating = document.getElementsByClassName('rvw-rate')[0].value;\n    const comment = document.getElementsByClassName('rvw-comment')[0].value;\n\n    DBHelper.saveReview(self.restaurant.id, name, rating, comment, (error, result) => {\n      if(error){\n        console.log(`Error saving review: ${error}`); \n      }\n      window.location.href=`/restaurant.html?id=${self.restaurant.id}`;\n    });\n  });\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nconst fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nconst fillReviewsHTML = (error, reviews) => {\n  if(error) {\n    console.log(`Error displaying reviews: ${error}`);\n  }\n  self.restaurant.reviews = reviews;\n\n  const container = document.getElementById('reviews-container');\n  const reviewHeader = document.createElement('div');\n  reviewHeader.className = 'rvw-header';\n\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  reviewHeader.appendChild(title);\n  \n  const addReviewLink = document.createElement(\"a\");\n  addReviewLink.innerHTML = 'Add Review';\n  addReviewLink.className = 'add-link';\n  addReviewLink.onclick =  modalToggle;\n  reviewHeader.appendChild(addReviewLink);\n  container.appendChild(reviewHeader);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\nconst createReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  const date = document.createElement('p');\n  //need change for date from review server\n  date.innerHTML = new Date(review.createdAt).toDateString();\n  li.appendChild(date);\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  li.appendChild(rating);\n\n  const comments = document.createElement('p');\n  if(!review.comments){\n    comments.innerHTML = review.comment;\n  }else{\n    comments.innerHTML = review.comments;\n  }\n  li.appendChild(comments);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nconst fillBreadcrumb = (restaurant=self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\nconst getParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}"]}