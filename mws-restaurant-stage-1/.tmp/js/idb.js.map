{"version":3,"sources":["idb.js"],"names":["toArray","arr","Array","prototype","slice","call","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","module","exports","self","idb"],"mappings":"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","file":"idb.js","sourcesContent":["'use strict';\r\n\r\n(function() {\r\n  function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n  }\r\n\r\n  function promisifyRequest(request) {\r\n    return new Promise(function(resolve, reject) {\r\n      request.onsuccess = function() {\r\n        resolve(request.result);\r\n      };\r\n\r\n      request.onerror = function() {\r\n        reject(request.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  function promisifyRequestCall(obj, method, args) {\r\n    var request;\r\n    var p = new Promise(function(resolve, reject) {\r\n      request = obj[method].apply(obj, args);\r\n      promisifyRequest(request).then(resolve, reject);\r\n    });\r\n\r\n    p.request = request;\r\n    return p;\r\n  }\r\n\r\n  function promisifyCursorRequestCall(obj, method, args) {\r\n    var p = promisifyRequestCall(obj, method, args);\r\n    return p.then(function(value) {\r\n      if (!value) return;\r\n      return new Cursor(value, p.request);\r\n    });\r\n  }\r\n\r\n  function proxyProperties(ProxyClass, targetProp, properties) {\r\n    properties.forEach(function(prop) {\r\n      Object.defineProperty(ProxyClass.prototype, prop, {\r\n        get: function() {\r\n          return this[targetProp][prop];\r\n        },\r\n        set: function(val) {\r\n          this[targetProp][prop] = val;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\r\n    properties.forEach(function(prop) {\r\n      if (!(prop in Constructor.prototype)) return;\r\n      ProxyClass.prototype[prop] = function() {\r\n        return promisifyRequestCall(this[targetProp], prop, arguments);\r\n      };\r\n    });\r\n  }\r\n\r\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\r\n    properties.forEach(function(prop) {\r\n      if (!(prop in Constructor.prototype)) return;\r\n      ProxyClass.prototype[prop] = function() {\r\n        return this[targetProp][prop].apply(this[targetProp], arguments);\r\n      };\r\n    });\r\n  }\r\n\r\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\r\n    properties.forEach(function(prop) {\r\n      if (!(prop in Constructor.prototype)) return;\r\n      ProxyClass.prototype[prop] = function() {\r\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\r\n      };\r\n    });\r\n  }\r\n\r\n  function Index(index) {\r\n    this._index = index;\r\n  }\r\n\r\n  proxyProperties(Index, '_index', [\r\n    'name',\r\n    'keyPath',\r\n    'multiEntry',\r\n    'unique'\r\n  ]);\r\n\r\n  proxyRequestMethods(Index, '_index', IDBIndex, [\r\n    'get',\r\n    'getKey',\r\n    'getAll',\r\n    'getAllKeys',\r\n    'count'\r\n  ]);\r\n\r\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\r\n    'openCursor',\r\n    'openKeyCursor'\r\n  ]);\r\n\r\n  function Cursor(cursor, request) {\r\n    this._cursor = cursor;\r\n    this._request = request;\r\n  }\r\n\r\n  proxyProperties(Cursor, '_cursor', [\r\n    'direction',\r\n    'key',\r\n    'primaryKey',\r\n    'value'\r\n  ]);\r\n\r\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\r\n    'update',\r\n    'delete'\r\n  ]);\r\n\r\n  // proxy 'next' methods\r\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\r\n    if (!(methodName in IDBCursor.prototype)) return;\r\n    Cursor.prototype[methodName] = function() {\r\n      var cursor = this;\r\n      var args = arguments;\r\n      return Promise.resolve().then(function() {\r\n        cursor._cursor[methodName].apply(cursor._cursor, args);\r\n        return promisifyRequest(cursor._request).then(function(value) {\r\n          if (!value) return;\r\n          return new Cursor(value, cursor._request);\r\n        });\r\n      });\r\n    };\r\n  });\r\n\r\n  function ObjectStore(store) {\r\n    this._store = store;\r\n  }\r\n\r\n  ObjectStore.prototype.createIndex = function() {\r\n    return new Index(this._store.createIndex.apply(this._store, arguments));\r\n  };\r\n\r\n  ObjectStore.prototype.index = function() {\r\n    return new Index(this._store.index.apply(this._store, arguments));\r\n  };\r\n\r\n  proxyProperties(ObjectStore, '_store', [\r\n    'name',\r\n    'keyPath',\r\n    'indexNames',\r\n    'autoIncrement'\r\n  ]);\r\n\r\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\r\n    'put',\r\n    'add',\r\n    'delete',\r\n    'clear',\r\n    'get',\r\n    'getAll',\r\n    'getKey',\r\n    'getAllKeys',\r\n    'count'\r\n  ]);\r\n\r\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\r\n    'openCursor',\r\n    'openKeyCursor'\r\n  ]);\r\n\r\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\r\n    'deleteIndex'\r\n  ]);\r\n\r\n  function Transaction(idbTransaction) {\r\n    this._tx = idbTransaction;\r\n    this.complete = new Promise(function(resolve, reject) {\r\n      idbTransaction.oncomplete = function() {\r\n        resolve();\r\n      };\r\n      idbTransaction.onerror = function() {\r\n        reject(idbTransaction.error);\r\n      };\r\n      idbTransaction.onabort = function() {\r\n        reject(idbTransaction.error);\r\n      };\r\n    });\r\n  }\r\n\r\n  Transaction.prototype.objectStore = function() {\r\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\r\n  };\r\n\r\n  proxyProperties(Transaction, '_tx', [\r\n    'objectStoreNames',\r\n    'mode'\r\n  ]);\r\n\r\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\r\n    'abort'\r\n  ]);\r\n\r\n  function UpgradeDB(db, oldVersion, transaction) {\r\n    this._db = db;\r\n    this.oldVersion = oldVersion;\r\n    this.transaction = new Transaction(transaction);\r\n  }\r\n\r\n  UpgradeDB.prototype.createObjectStore = function() {\r\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\r\n  };\r\n\r\n  proxyProperties(UpgradeDB, '_db', [\r\n    'name',\r\n    'version',\r\n    'objectStoreNames'\r\n  ]);\r\n\r\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\r\n    'deleteObjectStore',\r\n    'close'\r\n  ]);\r\n\r\n  function DB(db) {\r\n    this._db = db;\r\n  }\r\n\r\n  DB.prototype.transaction = function() {\r\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\r\n  };\r\n\r\n  proxyProperties(DB, '_db', [\r\n    'name',\r\n    'version',\r\n    'objectStoreNames'\r\n  ]);\r\n\r\n  proxyMethods(DB, '_db', IDBDatabase, [\r\n    'close'\r\n  ]);\r\n\r\n  // Add cursor iterators\r\n  // TODO: remove this once browsers do the right thing with promises\r\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\r\n    [ObjectStore, Index].forEach(function(Constructor) {\r\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\r\n      if (!(funcName in Constructor.prototype)) return;\r\n\r\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\r\n        var args = toArray(arguments);\r\n        var callback = args[args.length - 1];\r\n        var nativeObject = this._store || this._index;\r\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\r\n        request.onsuccess = function() {\r\n          callback(request.result);\r\n        };\r\n      };\r\n    });\r\n  });\r\n\r\n  // polyfill getAll\r\n  [Index, ObjectStore].forEach(function(Constructor) {\r\n    if (Constructor.prototype.getAll) return;\r\n    Constructor.prototype.getAll = function(query, count) {\r\n      var instance = this;\r\n      var items = [];\r\n\r\n      return new Promise(function(resolve) {\r\n        instance.iterateCursor(query, function(cursor) {\r\n          if (!cursor) {\r\n            resolve(items);\r\n            return;\r\n          }\r\n          items.push(cursor.value);\r\n\r\n          if (count !== undefined && items.length == count) {\r\n            resolve(items);\r\n            return;\r\n          }\r\n          cursor.continue();\r\n        });\r\n      });\r\n    };\r\n  });\r\n\r\n  var exp = {\r\n    open: function(name, version, upgradeCallback) {\r\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\r\n      var request = p.request;\r\n\r\n      if (request) {\r\n        request.onupgradeneeded = function(event) {\r\n          if (upgradeCallback) {\r\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\r\n          }\r\n        };\r\n      }\r\n\r\n      return p.then(function(db) {\r\n        return new DB(db);\r\n      });\r\n    },\r\n    delete: function(name) {\r\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\r\n    }\r\n  };\r\n\r\n  if (typeof module !== 'undefined') {\r\n    module.exports = exp;\r\n    module.exports.default = module.exports;\r\n  }\r\n  else {\r\n    self.idb = exp;\r\n  }\r\n}());"]}