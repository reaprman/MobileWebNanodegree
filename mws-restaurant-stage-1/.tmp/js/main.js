"use strict";var restaurants,
neighborhoods,
cuisines;
var newMap;
var markers = [];

/**
                   * Fetch neighborhoods and cuisines as soon as the page is loaded.
                   */
document.addEventListener('DOMContentLoaded', function (event) {
  initMap(); // added 
  fetchNeighborhoods();
  fetchCuisines();
});

/**
     * Fetch all neighborhoods and set their HTML.
     */
var fetchNeighborhoods = function fetchNeighborhoods() {
  DBHelper.fetchNeighborhoods(function (error, neighborhoods) {
    if (error) {// Got an error
      console.error(error);
    } else {
      self.neighborhoods = neighborhoods;
      fillNeighborhoodsHTML();
    }
  });
};

/**
    * Set neighborhoods HTML.
    */
var fillNeighborhoodsHTML = function fillNeighborhoodsHTML() {var neighborhoods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.neighborhoods;
  var select = document.getElementById('neighborhoods-select');
  neighborhoods.forEach(function (neighborhood) {
    var option = document.createElement('option');
    option.innerHTML = neighborhood;
    option.value = neighborhood;
    select.append(option);
  });
};

/**
    * Fetch all cuisines and set their HTML.
    */
var fetchCuisines = function fetchCuisines() {
  DBHelper.fetchCuisines(function (error, cuisines) {
    if (error) {// Got an error!
      console.error(error);
    } else {
      self.cuisines = cuisines;
      fillCuisinesHTML();
    }
  });
};

/**
    * Set cuisines HTML.
    */
var fillCuisinesHTML = function fillCuisinesHTML() {var cuisines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.cuisines;
  var select = document.getElementById('cuisines-select');

  cuisines.forEach(function (cuisine) {
    var option = document.createElement('option');
    option.innerHTML = cuisine;
    option.value = cuisine;
    select.append(option);
  });
};

/**
    * Initialize leaflet map, called from HTML.
    */
var initMap = function initMap() {
  self.newMap = L.map('map', {
    center: [40.722216, -73.987501],
    zoom: 12,
    scrollWheelZoom: false });

  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {
    mapboxToken: 'pk.eyJ1IjoidGhlZ3JlYXRkZWJhdGUiLCJhIjoiY2pqeHhjY2V4YWh4ZDNxbGZtMXAxdndmdSJ9.buoZhVfjmQ4MLiAk0B4vaA',
    maxZoom: 18,
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
    '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
    'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
    id: 'mapbox.streets' }).
  addTo(newMap);

  updateRestaurants();
};
/* window.initMap = () => {
     let loc = {
       lat: 40.722216,
       lng: -73.987501
     };
     self.map = new google.maps.Map(document.getElementById('map'), {
       zoom: 12,
       center: loc,
       scrollwheel: false
     });
     updateRestaurants();
   } */

/**
         * Update page and map for current restaurants.
         */
var updateRestaurants = function updateRestaurants() {
  var cSelect = document.getElementById('cuisines-select');
  var nSelect = document.getElementById('neighborhoods-select');

  var cIndex = cSelect.selectedIndex;
  var nIndex = nSelect.selectedIndex;

  var cuisine = cSelect[cIndex].value;
  var neighborhood = nSelect[nIndex].value;

  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, function (error, restaurants) {
    if (error) {// Got an error!
      console.error(error);
    } else {
      resetRestaurants(restaurants);
      fillRestaurantsHTML();
    }
  });
};

/**
    * Clear current restaurants, their HTML and remove their map markers.
    */
var resetRestaurants = function resetRestaurants(restaurants) {
  // Remove all restaurants
  self.restaurants = [];
  var ul = document.getElementById('restaurants-list');
  ul.innerHTML = '';

  // Remove all map markers
  if (self.markers) {
    self.markers.forEach(function (marker) {return marker.remove();});
  }
  self.markers = [];
  self.restaurants = restaurants;
};

/**
    * Create all restaurants HTML and add them to the webpage.
    */
var fillRestaurantsHTML = function fillRestaurantsHTML() {var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;
  var ul = document.getElementById('restaurants-list');
  restaurants.forEach(function (restaurant) {
    ul.append(createRestaurantHTML(restaurant));
  });
  addMarkersToMap();
};

/**
    * Create restaurant HTML.
    */
var createRestaurantHTML = function createRestaurantHTML(restaurant) {
  var li = document.createElement('li');

  //changes for img section inspired by Project 1 MWS
  var image = document.createElement('img');
  image.className = 'restaurant-img';
  var img = DBHelper.imageUrlForRestaurant(restaurant);
  var imgArr = img.split('.');
  var img2x = imgArr[0] + '-800_2x.' + imgArr[1];
  var img1x = imgArr[0] + '-400_1x.' + imgArr[1];
  image.src = img1x;
  image.srcset = "".concat(img2x, " 2x, ").concat(img1x, " 1x");
  image.alt = restaurant.name;
  li.append(image);

  var name = document.createElement('h3');
  name.innerHTML = restaurant.name;
  li.append(name);

  var neighborhood = document.createElement('p');
  neighborhood.innerHTML = restaurant.neighborhood;
  li.append(neighborhood);

  var address = document.createElement('p');
  address.innerHTML = restaurant.address;
  li.append(address);

  var more = document.createElement('button');
  more.innerHTML = 'Restaurant Details';
  more.onclick = function () {
    window.location.href = DBHelper.urlForRestaurant(restaurant);
  };
  //more.href = DBHelper.urlForRestaurant(restaurant);
  li.append(more);

  return li;
};

/**
    * Add markers for current restaurants to the map.
    */
var addMarkersToMap = function addMarkersToMap() {var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;
  restaurants.forEach(function (restaurant) {
    // Add marker to the map
    var marker = DBHelper.mapMarkerForRestaurant(restaurant, self.newMap);
    marker.on("click", onClick);
    function onClick() {
      window.location.href = marker.options.url;
    }
    self.markers.push(marker);
  });
};

/* addMarkersToMap = (restaurants = self.restaurants) => {
     restaurants.forEach(restaurant => {
       // Add marker to the map
       const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);
       google.maps.event.addListener(marker, 'click', () => {
         window.location.href = marker.url
       });
       self.markers.push(marker);
     });
   } */
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=main.js.map
