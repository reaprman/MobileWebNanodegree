{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","newMap","document","addEventListener","event","initMap","fetchRestaurantFromURL","error","console","self","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","getParameterByName","fetchRestaurantById","fillRestaurantHTML","arguments","length","undefined","name","getElementById","innerHTML","address","image","img","imageUrlForRestaurant","imgArr","split","img1","img2","img3","className","src","srcset","concat","sizes","alt","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","fillReviewModal","modal","createElement","content","close","appendChild","setAttribute","rating","option","rates","forEach","rate","value","review","submit","container","operatingHours","hours","key","row","day","time","reviews","log","title","addReviewLink","onclick","getElementbyId","classList","toggle","noReviews","ul","createReviewHTML","li","date","comments","breadcrumb","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"AAAA,YAAA,IAAIA,YACAC,MAKJC,UAASC,iBAAiB,mBAAoB,SAACC,GAC7CC,WAMF,IAAMA,SAAU,WACdC,uBAAuB,SAACC,EAAOP,GACzBO,EACFC,QAAQD,MAAMA,IAEdE,KAAKR,OAASS,EAAEC,IAAI,OAClBC,QAASZ,EAAWa,OAAOC,IAAKd,EAAWa,OAAOE,KAClDC,KAAM,GACNC,iBAAiB,IAEnBP,EAAEQ,UAAU,qFACVC,YAAa,qGACbC,QAAS,GACTC,YAAa,0NAGbC,GAAI,mBACHC,MAAMtB,QACTuB,iBACAC,SAASC,uBAAuBjB,KAAKT,WAAYS,KAAKR,YAwBtDK,uBAAyB,SAACqB,GAC9B,GAAIlB,KAAKT,WAEP,WADA2B,GAAS,KAAMlB,KAAKT,WAGtB,IAAMsB,GAAKM,mBAAmB,KACzBN,GAIHG,SAASI,oBAAoBP,EAAI,SAACf,EAAOP,GAEvC,MADAS,MAAKT,WAAaA,EACbA,GAIL8B,yBACAH,GAAS,KAAM3B,QAJbQ,SAAQD,MAAMA,MANlBA,MAAQ,0BACRoB,EAASpB,MAAO,QAiBduB,mBAAqB,WAAkC,GAAjC9B,GAAiC+B,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAApBtB,KAAKT,WACtCkC,EAAOhC,SAASiC,eAAe,kBACrCD,GAAKE,UAAYpC,EAAWkC,IAE5B,IAAMG,GAAUnC,SAASiC,eAAe,qBACxCE,GAAQD,UAAYpC,EAAWqC,OAE/B,IAAMC,GAAQpC,SAASiC,eAAe,kBAClCI,EAAMd,SAASe,sBAAsBxC,GACrCyC,EAASF,EAAIG,MAAM,KACnBC,EAAOF,EAAO,GAAK,WAAaA,EAAO,GACvCG,EAAOH,EAAO,GAAK,WAAaA,EAAO,GACvCI,EAAOJ,EAAO,GAAK,SAAWA,EAAO,EACzCH,GAAMQ,UAAY,iBAClBR,EAAMS,IAAMJ,EACZL,EAAMU,OAAN,GAAAC,OAAkBJ,EAAlB,YAAAI,OAAiCL,EAAjC,WAAAK,OAA+CN,EAA/C,SACAL,EAAMY,MAAQ,iFACdZ,EAAMa,IAAMnD,EAAWkC,IAEvB,IAAMkB,GAAUlD,SAASiC,eAAe,qBACxCiB,GAAQhB,UAAYpC,EAAWqD,aAG3BrD,EAAWsD,iBACbC,0BAGFC,kBAGAC,mBAMIA,gBAAkB,WACtB,GAAMC,GAAQxD,SAASyD,cAAT,MACdD,GAAMZ,UAAU,QAChBY,EAAMpC,GAAG,OAET,IAAMsC,GAAU1D,SAASyD,cAAc,MACvCC,GAAQd,UAAU,eAClB,IAAMe,GAAQ3D,SAASyD,cAAc,OACrCE,GAAMf,UAAU,YAChBe,EAAMzB,UAAU,UAChBwB,EAAQE,YAAYD,EAEpB,IAAM3B,GAAOhC,SAASyD,cAAc,QACpCzB,GAAKY,UAAY,eACjBZ,EAAK6B,aAAa,OAAO,QACzB7B,EAAK6B,aAAa,QAAS,aAC3BH,EAAQE,YAAY5B,EAEpB,IAAM8B,GAAS9D,SAASyD,cAAc,UAClCM,EAAS/D,SAASyD,cAAc,UAE9BO,GAAS,EAAE,EAAE,EAAE,EAAE,EACvBA,GAAMC,QAAQ,SAAAC,GACZH,EAAOI,MAAQD,EACfJ,EAAOF,YAAYG,KAErBL,EAAQE,YAAYE,EAEpB,IAAMM,GAASpE,SAASyD,cAAc,WACtCW,GAAOxB,UAAY,cACnBc,EAAQE,YAAYQ,EAGpB,IAAMC,GAASrE,SAASyD,cAAc,QACtCY,GAAOzB,UAAY,aACnByB,EAAOR,aAAa,OAAO,UAC3BQ,EAAOnC,UAAY,cAEnBwB,EAAQE,YAAYS,GAEpBb,EAAMI,YAAYF,EAElB,IAAMY,GAAatE,SAASiC,eAAe,oBAC3CqC,GAAUV,YAAYJ,IAMlBH,wBAA0B,WAAsD,GAArDkB,GAAqD1C,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAApCtB,KAAKT,WAAWsD,gBAC1DoB,EAAQxE,SAASiC,eAAe,mBACtC,KAAK,GAAIwC,KAAOF,GAAgB,CAC9B,GAAMG,GAAM1E,SAASyD,cAAc,MAE7BkB,EAAM3E,SAASyD,cAAc,KACnCkB,GAAIzC,UAAYuC,EAChBC,EAAId,YAAYe,EAEhB,IAAMC,GAAO5E,SAASyD,cAAc,KACpCmB,GAAK1C,UAAYqC,EAAeE,GAChCC,EAAId,YAAYgB,GAEhBJ,EAAMZ,YAAYc,KAOhBpB,gBAAkB,SAACjD,EAAOwE,GAC3BxE,GACDC,QAAQwE,IAAR,6BAAA/B,OAAyC1C,IAE3CE,KAAKT,WAAW+E,QAAUA,CAE1B,IAAMP,GAAYtE,SAASiC,eAAe,qBACpC8C,EAAQ/E,SAASyD,cAAc,KACrCsB,GAAM7C,UAAY,SAElB,IAAM8C,GAAgBhF,SAASyD,cAAc,IAS7C,IARAuB,EAAc9C,UAAY,aAC1B8C,EAAcC,QAAW,WACvB,GAAIzB,GAAQ0B,eAAe,QAC3B1B,GAAM2B,UAAUC,OAAO,eAEzBL,EAAMnB,YAAYoB,GAClBV,EAAUV,YAAYmB,IAEjBF,EAAS,CACZ,GAAMQ,GAAYrF,SAASyD,cAAc,IAGzC,OAFA4B,GAAUnD,UAAY,sBACtBoC,GAAUV,YAAYyB,GAGxB,GAAMC,GAAKtF,SAASiC,eAAe,eACnC4C,GAAQZ,QAAQ,SAAAG,GACdkB,EAAG1B,YAAY2B,iBAAiBnB,MAElCE,EAAUV,YAAY0B,IAMlBC,iBAAmB,SAACnB,GACxB,GAAMoB,GAAKxF,SAASyD,cAAc,MAC5BzB,EAAOhC,SAASyD,cAAc,IACpCzB,GAAKE,UAAYkC,EAAOpC,KACxBwD,EAAG5B,YAAY5B,EAEf,IAAMyD,GAAOzF,SAASyD,cAAc,IACpCgC,GAAKvD,UAAYkC,EAAOqB,KACxBD,EAAG5B,YAAY6B,EAEf,IAAM3B,GAAS9D,SAASyD,cAAc,IACtCK,GAAO5B,UAAP,WAAAa,OAA8BqB,EAAON,QACrC0B,EAAG5B,YAAYE,EAEf,IAAM4B,GAAW1F,SAASyD,cAAc,IAIxC,OAHAiC,GAASxD,UAAYkC,EAAOsB,SAC5BF,EAAG5B,YAAY8B,GAERF,GAMHlE,eAAiB,WAAgC,GAA/BxB,GAA+B+B,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAApBtB,KAAKT,WAChC6F,EAAa3F,SAASiC,eAAe,cACrCuD,EAAKxF,SAASyD,cAAc,KAClC+B,GAAGtD,UAAYpC,EAAWkC,KAC1B2D,EAAW/B,YAAY4B,IAMnB9D,mBAAqB,SAACM,EAAM4D,GAC3BA,IACHA,EAAMC,OAAOC,SAASC,MACxB/D,EAAOA,EAAKgE,QAAQ,UAAW,OAC/B,IAAMC,GAAQ,GAAIC,QAAJ,OAAAnD,OAAkBf,EAAlB,sBACZmE,EAAUF,EAAMG,KAAKR,EACvB,OAAKO,GAEAA,EAAQ,GAENE,mBAAmBF,EAAQ,GAAGH,QAAQ,MAAO,MAD3C,GAFA","file":"restaurant_info.js","sourcesContent":["let restaurant;\nvar newMap;\n\n/**\n * Initialize map as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', (event) => {  \n  initMap();\n});\n\n/**\n * Initialize leaflet map\n */\nconst initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {      \n      self.newMap = L.map('map', {\n        center: [restaurant.latlng.lat, restaurant.latlng.lng],\n        zoom: 16,\n        scrollWheelZoom: false\n      });\n      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n        mapboxToken: 'pk.eyJ1IjoidGhlZ3JlYXRkZWJhdGUiLCJhIjoiY2pqeHhjY2V4YWh4ZDNxbGZtMXAxdndmdSJ9.buoZhVfjmQ4MLiAk0B4vaA',\n        maxZoom: 18,\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n          '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n          'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        id: 'mapbox.streets'    \n      }).addTo(newMap);\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.newMap);\n    }\n  });\n}  \n \n/* window.initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      self.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n    }\n  });\n} */\n\n/**\n * Get current restaurant from page URL.\n */\nconst fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nconst fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  const image = document.getElementById('restaurant-img');\n  var img = DBHelper.imageUrlForRestaurant(restaurant);\n  var imgArr = img.split('.')\n  var img1 = imgArr[0] + '-400_1x.' + imgArr[1];\n  var img2 = imgArr[0] + '-800_2x.' + imgArr[1];\n  var img3 = imgArr[0] + '-1600.' + imgArr[1];\n  image.className = 'restaurant-img';\n  image.src = img1;\n  image.srcset = `${img3} 1600w, ${img2} 800w, ${img1} 400w`;\n  image.sizes = '(max-width: 400px) 400px, (max-width: 800px) 800px, (max-width: 1200px) 1600px';\n  image.alt = restaurant.name;\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n\n  // create review modal\n  fillReviewModal();\n}\n\n/**\n * Create Modal to submit new review\n */\nconst fillReviewModal = () => {\n  const modal = document.createElement(`div`);\n  modal.className='modal';\n  modal.id='modal';\n\n  const content = document.createElement('div');\n  content.className='modal-content';\n  const close = document.createElement('span');\n  close.className='close-btn';\n  close.innerHTML='&times;'\n  content.appendChild(close);\n\n  const name = document.createElement('input');\n  name.className = 'rvw-reviewer';\n  name.setAttribute('type','text');\n  name.setAttribute('value', 'Your Name');\n  content.appendChild(name);\n\n  const rating = document.createElement('select');\n  let option = document.createElement('option');\n  //loop through and create ratings\n  const rates = [1,2,3,4,5];\n  rates.forEach(rate =>{\n    option.value = rate;\n    rating.appendChild(option);\n  });\n  content.appendChild(rating);\n\n  const review = document.createElement('textarea');\n  review.className = 'rvw-comment';\n  content.appendChild(review);\n\n  //add submit button\n  const submit = document.createElement('input');\n  submit.className = 'submit-btn';\n  submit.setAttribute('type','submit');\n  submit.innerHTML = 'Save Review';\n  //submit.addEventListener('click',);\n  content.appendChild(submit);\n  //add content to modal\n  modal.appendChild(content);\n  //add modal to restaurant review page\n  const container =  document.getElementById('reviews-container');\n  container.appendChild(modal);\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nconst fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nconst fillReviewsHTML = (error, reviews) => {\n  if(error) {\n    console.log(`Error displaying reviews: ${error}`);\n  }\n  self.restaurant.reviews = reviews;\n\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  \n  const addReviewLink = document.createElement(\"a\");\n  addReviewLink.innerHTML = 'Add Review';\n  addReviewLink.onclick =  function(){\n    let modal = getElementbyId('modal');\n    modal.classList.toggle('show-modal');\n  }\n  title.appendChild(addReviewLink);\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\nconst createReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  const date = document.createElement('p');\n  date.innerHTML = review.date;\n  li.appendChild(date);\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  li.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nconst fillBreadcrumb = (restaurant=self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\nconst getParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n"]}